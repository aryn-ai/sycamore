[tool.poetry]
name = "sycamore-ai"
version = "0.1.23"
description = "Sycamore is an LLM-powered semantic data preparation system for building search applications."
authors = ["aryn.ai <opensource@aryn.ai>"]
readme = "README.md"
repository = "https://github.com/aryn-ai/sycamore.git"
packages = [{ include = "sycamore" }]


[tool.poetry.urls]
"Repository" = "https://github.com/aryn-ai/sycamore.git"
"Documentation" = "https://sycamore.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"

pandas = "^2.1.1"
pdf2image = "^1.16.3"
ray = { extras = ["default"], version = "^2.36.0" }

pyarrow = "^14.0.2"
numpy = "<2.0.0"
openai = "^1.40.2"
beautifulsoup4 = "^4.12.2"
guidance = "0.1.14" # See poetry-lock/pyproject.toml
amazon-textract-textractor = "^1.3.2"
boto3 = "^1.28.70"
boto3-stubs = {extras = ["essential"], version = "^1.35.12"}
urllib3 = ">=1.26.0,<3"
async-timeout = ">4.0.0"
pillow = ">=9.4.0" # See poetry-lock/pyproject.toml
tenacity = "^8.4.1"
diskcache = "^5.6.3"
overrides = "^7.7.0"
structlog = "^24.2.0"
setuptools = ">70.0.0"
dateparser = "^1.2.0"


jinja2 = "^3.1"
fsspec = "2024.2.0" # See poetry-lock/pyproject.toml

aiohttp = "^3.9.2"
fasteners = "^0.19"
pydantic = "^2.8.2"

typing-extensions = "^4.12.2"

#Evaluation dependencies
apted = { version = "^1.0.3", optional = true }
datasets = { version = "^2.16.1", optional = true }
rouge = { version = "^1.0.1", optional = true }

# Dependencies for building docs. Defined as an extra
# so they can be installed using pip on RTD.
furo = { version = "^2023.9.10", optional = true }
myst-parser = { version = "^2.0.0", optional = true }
sphinx = { version = "^7.2.5", optional = true }

pypdf = "^4.3.0"

# Connector dependencies
elasticsearch = { version = "8.14.0", optional = true}
duckdb = { version = "^1.0.0", optional = true }
neo4j = { version = "^5.21.0", optional = true }
opensearch-py = { version = "^2.3.1", optional = true }
pinecone-client = { version = "^4.1.0", extras = ["grpc"], optional = true }
pinecone-text = { version = "^0.9.0", optional = true }
weaviate-client = { version = ">=4.6.1,<4.7", optional = true } # typechecking fails with 4.7
qdrant-client = { version = "^1.11.2", optional = true }

# Local inference dependencies
easyocr = { version = "^1.7.1", optional = true }
paddleocr = { version = "^2.8.1", optional = true }
pdfminer-six = { version = "20221105", optional = true }
pytesseract = { version = "^0.3.10", optional = true }
sentence-transformers = { version = "^3.0.1", optional = true }
timm = { version = "^0.9.12", optional = true }
torch = { version = "^2.3.0", optional = true }
torchvision = { version = "^0.18.1", optional = true }
transformers = { version = "^4.43.1", optional = true }

# Legacy partitioner dependencies
unstructured = { version = "0.10.20", optional = true }
python-pptx = {version = "^0.6.22", optional = true }

[tool.poetry.group.test.dependencies]
flake8 = "4.0.1"
pytest = "7.4.0" # See poetry-lock/pyproject.toml
pytest-mock = "^3.11"

[tool.poetry.group.dev.dependencies]
sycamore-poetry-lock = { path = "../../lib/poetry-lock", develop = true }
ruff = "^0.0.287"
black = "^24.4"
pre-commit = "^3.4.0"
mypy = "^1.5.1"
nbmake = "^1.4.5"

[tool.poetry.group.notebook.dependencies]
jupyterlab = "^4.0.11"
jupyter-lsp = "^2.2.2"
ipywidgets = "^8.1.0"
matplotlib = "^3.9.0"
rich = "^13.7.1"

[tool.poetry.group.docker.dependencies]
requests = "^2"
redis-om = "^0.3"

[tool.poetry.extras]
docs = ["furo", "myst-parser", "sphinx"]
eval = ["apted", "datasets", "rouge"]

# Connector extras
duckdb = ["duckdb"]
elasticsearch = ["elasticsearch"]
neo4j = ["neo4j"]
opensearch = ["opensearch-py"]
pinecone = ["pinecone-client", "pinecone-text"]
weaviate = ["weaviate-client"]
qdrant = ["qdrant-client"]

# Partitioner extras
local-inference = [
  "easyocr",
  "paddleocr",
  "pdfminer-six",
  "pytesseract",
  "sentence-transformers",
  "timm",
  "torch",
  "torchvision",
  "transformers"
 ]
legacy-partitioners = ["unstructured", "python-pptx"]


[tool.ruff]
line-length = 120

[tool.black]
line-length = 120

[mypy]
mypy_path = "crawler/s3:crawler/http"
explicit_package_bases = true

[tool.mypy]
exclude = ["notebooks", "docs"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["."]
