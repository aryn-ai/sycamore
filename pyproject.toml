[project]
name = "sycamore-monorepo"
version = "0.0.1"
description = "Sycamore is an LLM-powered semantic data preparation system for building search applications."
authors = [{ name = "aryn.ai", email = "opensource@aryn.ai" }]
requires-python = ">=3.9,!=3.9.7,<3.13"
readme = "README.md"
dependencies = [
    "sycamore-ai>=0.1.13,<0.2",
    "rouge>=1.0.1,<2",
    "structlog>=24.4.0,<25",
]

[project.optional-dependencies]
docs = [
    "furo>=2023.9.10,<2024",
    "myst-parser>=2.0.0,<3",
    "sphinx>=7.2.5,<8",
]

[project.urls]
Repository = "https://github.com/aryn-ai/sycamore.git"
Documentation = "https://sycamore.readthedocs.io"

[dependency-groups]
test = [
    "flake8==4.0.1",
    "pytest~=7.4",
    "pytest-mock~=3.11",
]
dev = [
    "sycamore-ai[eval, duckdb, elasticsearch, neo4j, opensearch, pinecone, weaviate, local-inference, legacy-partitioners, anthropic]",
    "remote-processors",
    "integration",
    "sycamore-poetry-lock",
    "aryn-sdk",
    "ruff>=0.0.287,<0.0.288",
    "black~=24.4",
    "pre-commit>=3.4.0,<4",
    "mypy>=1.11.0,<2",
    "nbmake>=1.4.5,<2",
    "pip~=24.2",
    "devtools>=0.12,<0.13",
]
notebook = [
    "jupyterlab>=4.0.11,<5",
    "jupyter-lsp>=2.2.2,<3",
    "ipywidgets>=8.1.0,<9",
    "notebook>=7.1.2,<8",
    "s3contents>=0.11,<0.12",
]
docs = ["sycamore-ai[docs]"]
duckdb = ["sycamore-ai[duckdb]"]
elasticsearch = ["sycamore-ai[elasticsearch]"]
eval = ["sycamore-ai[eval]"]
legacy-partitioners = ["sycamore-ai[legacy-partitioners]"]
local-inference = ["sycamore-ai[local-inference]"]
neo4j = ["sycamore-ai[neo4j]"]
opensearch = ["sycamore-ai[opensearch]"]
pinecone = ["sycamore-ai[pinecone]"]
qdrant = ["sycamore-ai[qdrant]"]
weaviate = ["sycamore-ai[weaviate]"]

[tool.uv]
default-groups = [
    "test",
    "dev",
    "notebook",
    "docs",
    "duckdb",
    "elasticsearch",
    "eval",
    "legacy-partitioners",
    "local-inference",
    "neo4j",
    "opensearch",
    "pinecone",
    "qdrant",
    "weaviate",
]

[tool.uv.sources]
sycamore-ai = { path = "lib/sycamore", editable = true }
remote-processors = { path = "lib/remote-processors", editable = true }
integration = { path = "apps/integration", editable = true }
sycamore-poetry-lock = { path = "lib/poetry-lock", editable = true }
aryn-sdk = { path = "lib/aryn-sdk", editable = true }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120

[tool.black]
line-length = 120

[tool.mypy]
exclude = ["notebooks", "docs"]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.poetry-autolock.dependents]
integration = "apps/integration"

# END Auto-generated by autogen-groups.py
